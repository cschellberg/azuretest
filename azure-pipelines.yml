trigger:
  - main
pool:
  vmImage: ubuntu-latest

parameters:
  - name: initialValue
    type: string
    default: A value
    displayName: initial vlaue

stages:
  - stage: Stage0
    displayName: Stage 0
    jobs:
      - job: Job0
        displayName: Job 0.1
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                echo "hello world"
                myValue="the fox is over there"
                echo "##vso[task.setvariable variable=parameterValue;isoutput=true]$myValue"
            displayName: Bash script 1
            name: Script11
  - template: atemplate.yml
    parameters:
      templateParam: $[ dependencies.Stage0.Job0.outputs['Script11.parameterValue'] ]
  - stage: Stage1
    displayName: Stage 1
    jobs:
      - job: Job1
        displayName: Job 1.1
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                myValue=`echo ${{ parameters.initialValue }}`
                echo "my value is $myValue"
                echo "##vso[task.setvariable variable=anotherValue;isoutput=true]$myValue"
            displayName: Bash script 1
            name: Script11
      - job: Job12
        dependsOn: Job1
        displayName: Job 1.2
        variables:
          myJobVar: $[ dependencies.Job1.outputs['Script11.anotherValue'] ]
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                echo "my value is $(myJobVar)"
              displayName: Bash script 12
  - stage: Stage2
    displayName: Stage 2
    jobs:
      - job: Job2
        variables:
          myStageVar: $[ stageDependencies.Stage1.Job1.outputs['Script11.anotherValue'] ]
        displayName: Job 2.2
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                echo "my value is $(myStageVar)"
              displayName: Bash script 2

